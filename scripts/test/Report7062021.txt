SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
with cte as
(
SELECT h.BranchID, t.MenuItemKey,t.Quantity, t.ExtendedPrice, t.MenuItemUnitPrice
FROM   OrderTransactions AS t
       INNER JOIN OrderHeaders AS h ON  t.OrderKey = h.OrderKey
WHERE 
t.LineDeleted = 0
AND t.OrderDateTime >= @date1
AND t.OrderDateTime <= @date2
AND h.OrderStatus=2
AND h.LineDeleted=0
and h.@BranchID
), tmp as
(
select b.BranchName [Şube], p.ProductCode [Stok Kodu], p.ProductName [Stok Adı], g.PickValue [Grubu], ct.PickValue [Kategori], SUM(c.Quantity) [Satış Miktarı], ISNULL(p.PurchasePrice5,0) [Birim Maliyet], SUM(c.Quantity) * ISNULL(p.PurchasePrice5,0) [Toplam Maliyet], c.MenuItemUnitPrice [Satış Birim Fiyat], SUM(c.ExtendedPrice) [Satış Tutarı],
ISNULL(ROUND((SUM(c.Quantity) * ISNULL(p.PurchasePrice5,0)) * 100 / NULLIF(SUM(c.ExtendedPrice),0),2),0) [Maliyet %]
 from cte as c
inner join posProducts as p on c.MenuItemKey=p.ProductKey
inner join posPickList as g on p.GroupID=g.ListID and g.GroupID=3
inner join posPickList as ct on p.CategoryID=ct.ListID and ct.GroupID=2
inner join posBranchs as b on c.BranchID=b.BranchID
GROUP BY b.BranchName, p.ProductCode, p.ProductName, g.PickValue, ct.PickValue, p.PurchasePrice5, c.MenuItemUnitPrice
)
select * from tmp
order by Şube,[Stok Adı]