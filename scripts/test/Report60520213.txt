--maliyet-analizi-raporu
DECLARE @StartDate DATETIME = NULL
DECLARE @EndDate DATETIME = NULL
--DECLARE @BranchID INT=27;
--DECLARE @ClosingID INT=1632;
SELECT @StartDate = OpeningDate, @EndDate = ClosingDate FROM posWarehouseClosingHeader WITH (NOLOCK) WHERE ClosingID = @ClosingID

;WITH sales AS (
	SELECT
		p.ProductID,
		p.UnitID,
		l.BranchID,
		p.ProductName,
		SUM ( l.Quantity ) AS Quantity,
		SUM ( l.SaleUnitPrice * l.Quantity ) AS SaleUnitPrice,
		SUM ( l.FormulaCost ) Cost ,
		l.SaleTypeID
		
	FROM
		posProductionList l WITH ( NOLOCK )
		INNER JOIN posProducts p WITH ( NOLOCK ) ON p.ProductID = l.ProductID
	WHERE
		l.SaleDateTime BETWEEN @StartDate AND @EndDate
		AND l.BranchID = @BranchID 
		AND ISNULL( l.Ignored, 0 ) = 0 
		AND ISNULL( l.IsProduced, 0 ) = 1 
		AND l.RefDocumentID > 999 and ISNULL(p.IsActive,0)=1
	GROUP BY
		p.ProductID,
		p.UnitID,
		l.BranchID,
		p.ProductName,
		l.SaleTypeID
	),
	cost_ AS (
	SELECT
		pp.ProductID as FormulaAssignProductID,
		p.ProductID AS FormulaDetailProductID,
		ISNULL( SUM ( d.Amount ), 0 ) AS FormulaAmount,
		SUM((i.AveragePurchasePrice * d.Amount) * (1+p.TaxPercent1/100)) AS NetCost, 
		i.WarehouseID , s.SaleTypeID, ISNULL(p.TaxPercent1,0) AS TaxPercent1
	FROM
		posManafactureFormulaDetail d WITH ( NOLOCK )
		INNER JOIN posProducts p WITH ( NOLOCK ) ON d.ProductID = p.ProductID
		INNER JOIN posManafactureFormulaAssign fa WITH ( NOLOCK ) ON d.FormulaID = fa.FormulaID AND fa.BranchID = @BranchID
		INNER JOIN posProducts pp WITH ( NOLOCK ) ON fa.ProductID = pp.ProductID
		INNER JOIN posWarehouse AS w ON fa.WarehouseID=w.WarehouseID
		LEFT JOIN posBranchs AS b ON b.BranchID= fa.BranchID
		LEFT JOIN posWarehouseInventory AS i ON i.ProductID = d.ProductID and b.WarehouseID=i.WarehouseID
		INNER JOIN sales s ON pp.ProductID = s.ProductID
		where d.SaleTypeID in (0,s.SaleTypeID)
		AND b.WarehouseID = w.WarehouseID AND fa.BranchID=@BranchID and ISNULL(p.IsActive,0)=1 and ISNULL(pp.IsActive,0)=1
	GROUP BY
		pp.ProductID,
		p.ProductID, i.WarehouseID, s.SaleTypeID,p.TaxPercent1
	),
	cl AS (
	SELECT
		s.FormulaAssignProductID,
		
		SUM (
			( wcd.AveragePrice * ( wcd.Giren+ wcd.Devir ) ) / NULLIF ( ( wcd.Giren + wcd.Fark + wcd.Devir ), 0 ) * s.FormulaAmount 
		) AS Costs 

	FROM
		posWarehouseClosingDetail wcd WITH ( NOLOCK )
		INNER JOIN cost_ s ON wcd.ProductID = s.FormulaDetailProductID
		INNER JOIN posWarehouseClosingHeader wch WITH ( NOLOCK ) ON wcd.ClosingID = wch.ClosingID 
	WHERE
		wch.ClosingID = @ClosingID
	GROUP BY
		s.FormulaAssignProductID 
	)
	
SELECT
	s.SaleTypeID,
	(CASE s.SaleTypeID WHEN 1 THEN 'MASA' WHEN 2 THEN 'PAKET' ELSE '' END) AS [SaleType],
	b.BranchName,
	p.ProductCode,
	p.ProductName,
	u.UnitName,
	isnull( l.PickValue, '' ) AS CategoryName,
	isnull( g.PickValue, '' ) AS GroupName,
	s.Quantity [Miktar],
	ROUND( SaleUnitPrice / NULLIF ( s.Quantity, 0 ), 2 ) AS [SatışBirimFiyatıKdvHariç],
	ROUND( SaleUnitPrice, 2 ) AS [SatışTutarKdvHariç],
	ISNULL( ROUND( cl.Costs * ( 1 + p.TaxPercent1 / 100 ), 2 ), 0 ) AS [GerçekleşenBirimMaliyetKdvDahil],
	ISNULL(ROUND( ( ROUND( cl.Costs, 2 ) * NULLIF ( s.Quantity, 0 ) ) * ( 1+p.TaxPercent1/ 100 ), 2 ),0 ) AS [ToplamGerçekleşenMaliyetKdvDahil],
	
	(
	CASE
		WHEN p.IsSaleGoods= 1 THEN
		ROUND( ISNULL( i.AveragePurchasePrice, 0 ), 2 )
		ELSE 
		(
		select ROUND(SUM(NetCost),2) from cost_ where FormulaAssignProductID=s.ProductID and cost_.WarehouseID=b.WarehouseID and cost_.SaleTypeID IN (0, s.SaleTypeID)
		)
	END
	) AS [BirimMaliyetiKdvHariç],
	(
	CASE
		WHEN p.IsSaleGoods= 1 THEN
		ROUND( ISNULL( i.AveragePurchasePrice * ( 1+TaxPercent1/ 100 ), 0 ), 2 )
		ELSE 
		(
		select ROUND(SUM(NetCost * (1+cost_.TaxPercent1 / 100)),2) from cost_ where FormulaAssignProductID=s.ProductID and cost_.WarehouseID=b.WarehouseID and cost_.SaleTypeID IN (0, s.SaleTypeID)
		)
	END
	) AS [BirimMaliyetiKdvDahil],
		
	(
	CASE
		WHEN p.IsSaleGoods= 1 THEN
		ROUND( ISNULL( i.AveragePurchasePrice , 0 ) * s.Quantity, 2 )
		ELSE
		ROUND(ISNULL((select SUM(NetCost) from cost_ where FormulaAssignProductID=s.ProductID and cost_.WarehouseID=b.WarehouseID and cost_.SaleTypeID IN (0, s.SaleTypeID))* s.Quantity, 0 ), 2 ) 
	END
	) AS [ToplamMaliyetKdvHariç],
	(
	CASE
		WHEN p.IsSaleGoods= 1 THEN
		ROUND((ISNULL( i.AveragePurchasePrice, 0 ) * s.Quantity) * (1+p.TaxPercent1/ 100 ), 2 )
		ELSE
		ROUND((ISNULL((select SUM(NetCost * (1+cost_.TaxPercent1/100))  from cost_ where FormulaAssignProductID=s.ProductID and cost_.WarehouseID=b.WarehouseID and cost_.SaleTypeID IN (0, s.SaleTypeID))* s.Quantity, 0 )) , 2 ) 
	END
	) AS [ToplamMaliyetKdvDahil],
	
    ROUND((ISNULL((select SUM(NetCost) from cost_ where FormulaAssignProductID=s.ProductID and cost_.WarehouseID=b.WarehouseID and cost_.SaleTypeID IN (0, s.SaleTypeID)) , 0 )) * 100 / nullif( ( SaleUnitPrice / NULLIF ( s.Quantity, 0 ) ),0),2) 
	AS [MaliyetYüzdesiKdvHariç],
	ROUND(((ISNULL((select SUM(NetCost *( 1+cost_.TaxPercent1/ 100 )) from cost_ where FormulaAssignProductID=s.ProductID and cost_.WarehouseID=b.WarehouseID and cost_.SaleTypeID IN (0, s.SaleTypeID)) , 0 )) * 100 / nullif( ( SaleUnitPrice / NULLIF ( s.Quantity, 0 ) ),0)),2) 
	AS [MaliyetYüzdesiKdvDahil],

	ISNULL(ROUND(( cl.Costs * ( 1+p.TaxPercent1/ 100 ) * 100 / NULLIF(( SaleUnitPrice / NULLIF ( s.Quantity, 0 ) ),0) ),2 ),0 ) [GerçekleşenMaliyetYüzdesiKdvDahil] 
FROM
	sales AS s
	INNER JOIN posBranchs b WITH ( NOLOCK ) ON s.BranchID = b.BranchID
	INNER JOIN posProducts p WITH ( NOLOCK ) ON s.ProductID = p.ProductID
	INNER JOIN posProductUnits u WITH ( NOLOCK ) ON u.UnitID = s.UnitID
	INNER JOIN posPickList l WITH ( NOLOCK ) ON l.ListID = p.CategoryID
	INNER JOIN posPickList g WITH ( NOLOCK ) ON g.ListID = p.GroupID
	LEFT JOIN posWarehouseInventory i WITH ( NOLOCK ) ON p.ProductID = i.ProductID AND b.WarehouseID = i.WarehouseID
	LEFT JOIN cl ON s.ProductID = cl.FormulaAssignProductID 
WHERE
	1 = 1 and ISNULL(p.IsActive,0)=1
	--and s.ProductName='BARBEKÜS'
ORDER BY
	s.ProductName