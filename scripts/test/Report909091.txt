DECLARE @dt1 DATETIME,@dt2 DATETIME
SELECT @dt1=@date1,@dt2=@date2

SET NOCOUNT ON;
IF OBJECT_ID('tempdb..#tempTable') IS NOT NULL DROP TABLE #tempTable;
create table #tempTable (OrderKey UNIQUEIDENTIFIER,Brut float);
INSERT INTO #tempTable (OrderKey,Brut)
SELECT t.OrderKey,SUM(((isnull(nullif(t.MenuItemUnitPrice,0),(t.ExtendedPrice/t.Quantity)))*t.Quantity)) AS Brut FROM OrderTransactions AS t with(nolock)
WHERE t.OrderDateTime between @dt1 and @dt2
AND t.MenuItemText<>'CİNEMAXİMUM BİLET'
AND t.Quantity>0
AND t.@BranchID
AND t.LineDeleted=0 GROUP BY t.OrderKey;


SELECT ISNULL(b.BranchName, '-') AS Şube,r.GUN,ROUND(SUM(r.[Brüt Satışlar]), 2) AS [Brüt Satışlar]
,ROUND(SUM(r.[Brüt Satışlar]-r.[Net Satışlar]-r.[Nakit İndirimler]-r. [Çek İndirimler]),2) AS [Ürün İndirimleri]
,ROUND(SUM(r.[Nakit İndirimler]), 2) AS  [Nakit İndirimler]
,ROUND(SUM(r.[Çek İndirimler]),2) AS [Çek İndirimler]
,ROUND(SUM(r.[Brüt Satışlar]-r.[Net Satışlar]),2) AS [Toplam Indirimler]
,ROUND(SUM(r.[Net Satışlar]), 2) AS [Net Satışlar]
,ROUND((SUM(r.[Net Satışlar])) -(SUM(r.[Net Satışlar])) / 1.08, 2) AS [KDV],ROUND((SUM(r.[Net Satışlar])) / 1.08, 2) AS [KDV Hariç Net Satışlar]
,COUNT(r.[Toplam Çek Sayısı]) AS [Toplam Çek Sayısı],SUM(r.[Toplam Konuk]) AS [Toplam Konuk],
ROUND((SUM(r.[Net Satışlar]) / NULLIF(SUM(r.[Toplam Konuk]), 0)), 3) AS [Kişi Başı Ortalama],ROUND((SUM(r.[Net Satışlar]) / NULLIF(COUNT(r.[Toplam Çek Sayısı]), 0)), 3) AS [Çek Ortalama]
,r.BranchID AS [Şube Sıra No] FROM 
 (SELECT t.Brut AS [Brüt Satışlar],h.DiscountCashAmount AS [Nakit İndirimler],h.DiscountOrderAmount AS [Çek İndirimler],
 h.DiscountTotalAmount AS [Toplam Indirimler],h.amountdue AS [Net Satışlar],h.OrderID AS [Toplam Çek Sayısı],h.GuestNumber AS [Toplam Konuk],h.amountdue / ISNULL(h.GuestNumber, 1) AS 
 [Kişi Başı Ortalama],h.amountdue / ISNULL(h.orderID, 1) AS [Çek Ortalama],CONVERT(VARCHAR, DATEADD(hour,-4, h.OrderDateTime), 103) AS GUN,h.amountdue AS [GÜNLÜK TUTAR],h.BranchID
 FROM OrderHeaders h WITH (NOLOCK)
 INNER JOIN #tempTable AS t ON t.OrderKey = h.OrderKey
 WHERE 1=1 
 AND h.LineDeleted = 0 
 AND h.OrderDateTime between @dt1 and @dt2
  AND h.@BranchID
) AS r
LEFT OUTER JOIN efr_Branchs AS b ON b.BranchID = r.BranchID
GROUP BY r.BranchID,r.GUN,b.BranchName
ORDER BY r.BranchID ASC;
IF OBJECT_ID('tempdb..#tempTable') IS NOT NULL DROP TABLE #tempTable;