select 
t.BranchID as [Branch No],t.OrderID as [Çek No], t.Tarih as Tarih, '1' as Durum
from(
SELECT 
	DISTINCT
	OH.OrderKey,
	OH.OrderID,
	OH.BranchID,
	convert(varchar,oh.OrderDateTime,120) as Tarih
FROM OrderHeaders AS OH WITH (NOLOCK)
	INNER JOIN OrderTransactions AS OT WITH (NOLOCK) ON OT.OrderKey = OH.OrderKey AND OT.BranchID = OH.BranchID AND OT.LineDeleted=0
	inner join efr_Branchs b on oh.BranchID=b.branchID
WHERE 1=1
	AND OH.LineDeleted=1
	and oh.@BranchID
	AND OH.OrderDateTime BETWEEN @date1 AND @date2) as t


	union all


select 
t.BranchID as [Branch No],t.OrderID as [Çek No], t.Tarih as Tarih, '2' as Durum
from(
		SELECT
	OH.BranchID,
	oh.OrderID,
	OH.OrderKey, 
	convert(varchar,OH.OrderDateTime,120) as Tarih,
	OH.AmountDue, 
	ISNULL(SUM(OP.AmountPaid),0) AS AmountPaid,
	(OH.AmountDue-ISNULL(SUM(OP.AmountPaid),0)) AS Diff
FROM
	OrderHeaders OH WITH (NOLOCK)
LEFT JOIN OrderPayments OP ON OP.OrderKey = OH.OrderKey AND OP.BranchID = OH.BranchID AND OP.LineDeleted = 0
inner join efr_Branchs b on oh.BranchID=b.branchID
WHERE
	OH.OrderDateTime between @date1 and @date2
AND OH.LineDeleted = 0
and oh.@BranchID
AND OH.OrderStatus = 2
GROUP BY
	OH.BranchID,
	OH.OrderKey,
	convert(varchar,OH.OrderDateTime,120),
	OH.AmountDue,
	oh.OrderID
HAVING
	CAST(OH.AmountDue AS DECIMAL(18,2)) <> CAST(ISNULL(SUM(OP.AmountPaid),0) AS DECIMAL(18,2))) as t


	union all


	select 
t.BranchID as [Branch No],t.OrderID as [Çek No], t.Tarih as Tarih, '3' as Durum
from(
		SELECT
	convert(varchar,OH.OrderDateTime,120) as Tarih,
	oh.OrderID,
	OH.BranchID,
	OH.OrderKey,
	OH.SubTotal,
	OH.DiscountOrderAmount,
	OH.DiscountCashAmount,
	OH.DiscountTotalAmount,
	OH.DiscountLineAmount,
	OH.AmountDue,
	ROUND(ISNULL(SUM(OT.ExtendedPrice), 0),2) SatirTutar
FROM
	OrderHeaders OH WITH (NOLOCK)
LEFT JOIN OrderTransactions OT ON OT.OrderKey = OH.OrderKey AND OT.BranchID = OH.BranchID AND OT.LineDeleted = 0
inner join efr_Branchs b on oh.BranchID=b.branchID

WHERE
	OH.OrderDateTime between @date1 and @date2
AND OH.LineDeleted = 0
and oh.@BranchID
AND OH.OrderStatus = 2
GROUP BY
	convert(varchar,OH.OrderDateTime,120),
	OH.BranchID,
	OH.OrderKey,
	OH.SubTotal,
	OH.DiscountOrderAmount,
	OH.DiscountCashAmount,
	OH.DiscountTotalAmount,
	OH.DiscountLineAmount,
	OH.AmountDue,
	oh.OrderID
HAVING
	ABS(OH.AmountDue + OH.DiscountTotalAmount - ISNULL(SUM(OT.ExtendedPrice), 0) - OH.DiscountLineAmount) > 0.01) as t


	union all


	select 
t.BranchID as [Branch No],t.OrderID as [Çek No], t.Tarih as Tarih, '4' as Durum
from(
	SELECT
	H.OrderKey,
	H.OrderID,
	H.BranchID,
	convert(varchar,H.OrderDateTime,120) as Tarih,
	H.AmountDue
FROM
	OrderHeaders H
LEFT JOIN OrderPayments T ON T.OrderKey = H.OrderKey AND T.LineDeleted=0
inner join efr_Branchs b on h.BranchID=b.branchID
WHERE
	1 = 1
	AND H.OrderDateTime BETWEEN @date1 AND @date2
	AND H.LineDeleted = 0
	AND H.OrderStatus = 2
	and h.@BranchID
	AND H.AmountDue > 0
GROUP BY 
	H.OrderKey, H.OrderID, H.BranchID, convert(varchar,H.OrderDateTime,120),H.AmountDue 
HAVING 
	COUNT(T.AutoID) = 0
	) as t


	union all


	select 
t.BranchID as [Branch No],t.OrderID as [Çek No], t.Tarih as Tarih, '5' as Durum
from(
	select 
	oh.OrderID ,
	oh.BranchID,
	convert(varchar,oh.OrderDateTime,120) as Tarih
	from OrderHeaders oh
inner join efr_Branchs b on oh.BranchID=b.branchID
where OrderStatus=1
and oh.@BranchID
and OrderDateTime between @date1 and @date2) as t


union all 


select 
t.BranchID as [Branch No],t.OrderID as [Çek No], t.Tarih as Tarih, '6' as Durum
from(
select 
p.BranchID,
p.OrderID,
p.OrderKey,
convert(varchar,p.PaymentDateTime,120) as Tarih,
PaymentMethodName 
from OrderPayments p with(nolock)
where p.PaymentDateTime between @date1 and @date2
and (p.GlobalBankName is null or p.GlobalBankCode is null)
and p.LineDeleted=0
and p.@BranchID
and p.PaymentMethodName='KREDİ KARTI') as t